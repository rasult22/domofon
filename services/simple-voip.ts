import RNCallKeep from 'react-native-callkeep';
import uuid from 'react-native-uuid';
import VoipPushNotification from 'react-native-voip-push-notification';
export const initSimpleVoIP = () => {
  console.log('üî• Initializing VoIP Push...');
  
  // –ü–æ–ª—É—á–∏–ª–∏ —Ç–æ–∫–µ–Ω (–Ω–æ–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è)
  VoipPushNotification.addEventListener('register', (token) => {
    console.log('üì± VoIP Token received (new):', token);
    console.log('üì± Token length:', token.length);
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –Ω–∞ –±—ç–∫
  });

  // –ü–æ–ª—É—á–∏–ª–∏ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  VoipPushNotification.addEventListener('notification', (notification) => {
    console.log('üîî VoIP Push received:');
    console.log('üîî Raw notification:', notification);
    console.log('üîî Stringified:', JSON.stringify(notification, null, 2));
    console.log('üîî Notification keys:', Object.keys(notification));
    
    // üö® –ö–†–ò–¢–ò–ß–ù–û: –í—ã–∑—ã–≤–∞–µ–º CallKeep –ù–ï–ú–ï–î–õ–ï–ù–ù–û
    const uuid2 = notification.uuid || `call-${Date.now()}`;
    const callerName = notification.callerName || '–î–æ–º–æ—Ñ–æ–Ω';
    const handle = notification.handle || '–í—Ö–æ–¥—è—â–∏–π –∑–≤–æ–Ω–æ–∫';
    
    console.log('üìû Calling RNCallKeep.displayIncomingCall with:', { uuid, handle, callerName });
    
    try {
      RNCallKeep.displayIncomingCall(
        uuid.v4(),
        handle,
        callerName,
        'generic',
        false // hasVideo
      );
      console.log('‚úÖ CallKeep.displayIncomingCall —É—Å–ø–µ—à–Ω–æ –≤—ã–∑–≤–∞–Ω');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ CallKeep:', error);
    }
  });

  // –°–æ–±—ã—Ç–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã –¥–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ (–≤–∫–ª—é—á–∞—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω)
  VoipPushNotification.addEventListener('didLoadWithEvents', (events) => {
    console.log('üì¶ VoIP events loaded:', events);
    console.log('üì¶ Events count:', events?.length || 0);
    if (events && events.length > 0) {
      events.forEach((event, index) => {
        console.log(`üì¶ Event ${index}:`, JSON.stringify(event, null, 2));
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω
        if (event.name === 'RNVoipPushRemoteNotificationsRegisteredEvent' && event.data) {
          console.log('üì± VoIP Token received (cached):', event.data);
          console.log('üì± Cached token length:', event.data.length);
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –Ω–∞ –±—ç–∫
        }
      });
    }
  });

  // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º—Å—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ (–º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)
  VoipPushNotification.registerVoipToken();
  
  console.log('‚úÖ VoIP listeners registered');
};